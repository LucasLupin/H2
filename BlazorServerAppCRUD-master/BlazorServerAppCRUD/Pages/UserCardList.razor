@page "/user-card-list"
@using BlazorServerAppCRUD.Models;
@using BlazorServerAppCRUD.Services;

@layout MainLayoutUserCardList
@inject IUserServices UserServices
@inject NavigationManager NavigationManager

<div class="row">
    @foreach (var user in userList)
    {
        <div class="card" style="width: 20rem;">
            <img src="/Image/default-avatar.png" class="card-img-top" alt="...">
            <div class="card-body">
                <h5 class="card-title">User: @user.Login</h5>
            </div>
            <ul class="list-group list-group-flush">
                <li class="list-group-item">Firstname: @user.FirstName</li>
                <li class="list-group-item">Lastname: @user.LastName</li>
                <li class="list-group-item">Email: @user.Email</li>
                <li class="list-group-item">Test:  is simply dummy text of the printing and typesetting industry. Lorem Ipsum has been the industry's standard dummy text ever since the 1500s, when an unknown printer took a galley of type and scrambled it to make a type specimen book. It has survived not only five centuries, but also the leap into electronic typesetting, remaining essentially unchanged. It was popularised in the 1960s with the release of Letraset sheets containing Lorem Ipsum passages, and more recently with desktop publishing software like Aldus PageMaker including versions of Lorem Ipsum.</li>
            </ul>
            <div class="card-body">
                @*<button type="button" @onclick="(async () => await  NavigateToUserlist())" class="btn btn-success">Back</button>*@
                <button type="button" @onclick="(async () => await NavigateToUserDetails(user.Id))" class="btn btn-success">User Details</button>                
                <button type="button" @onclick="(async () => await  NavigateToUpdateUser(user.Id))" class="btn btn-primary">Edit</button>
                <button type="button" @onclick="(async () => await DeleteUser(user.Id))" class="btn btn-danger">Delete</button>
            </div>
        </div>
    }
</div>

@code {

    protected List<UserEntity> userList = new();

    protected override async Task OnInitializedAsync()
    {
        await GetUserList();
    }

    protected async Task<List<UserEntity>> GetUserList()
    {
        var res = UserServices.GetAllUsers().ToList();

        userList = res;
        return userList;
    }

    protected async Task NavigateToUserlist()
    {
        string pageURL = $"/user-list";

        NavigationManager.NavigateTo(pageURL);
    }

    protected async Task NavigateToUpdateUser(int userId)
    {
        string pageURL = $"/update-user/{userId.ToString()}";

        NavigationManager.NavigateTo(pageURL);
    }

    protected async Task DeleteUser(int userId)
    {
        UserServices.DeleteUser(userId);
        StateHasChanged();
        await GetUserList();

        //NavigationManager.NavigateTo("/");
    }

    protected async Task NavigateToUserDetails(int userId)
    {
        string pageURL = $"/user-details/{userId.ToString()}";

        NavigationManager.NavigateTo(pageURL);
    }
}
